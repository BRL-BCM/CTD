% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mle.getPtSim.r
\name{mle.getPtSim}
\alias{mle.getPtSim}
\title{Patient similarity using mutual information MLE metric of patients' most modular, perturbed subsets.}
\usage{
mle.getPtSim(p1.optBS, ptID, p2.optBS, ptID2, data_mx, perms)
}
\arguments{
\item{p1.optBS}{- The optimal bitstring associated with patient 1.}

\item{ptID}{- The identifier associated with patient 1's sample.}

\item{p2.optBS}{- The optimal bitstring associated with patient 2.}

\item{data_mx}{- The matrix that gives the perturbation strength (z-scores) for all variables (columns) for each patient (rows).}

\item{ptID}{- The identifier associated with patient 2's sample.}
}
\value{
patientSim - a similarity matrix, where row and columns are patient identifiers.
}
\description{
This function calculates the universal distance between patients, using a mutual information metric, where self-information comes from the minimum encoding length of each patient's encoded modular perturbations in the background knowledge graph.
}
\examples{
# Get patient distances
data_mx.pvals = apply(data_mx, c(1,2), function(i) 2*pnorm(abs(i), lower.tail = FALSE))
res = list()
tt = list(ncd=matrix(NA, nrow=ncol(data_mx), ncol=ncol(data_mx)))
rownames(t$ncd) = colnames(data_mx)
colnames(t$ncd) = colnames(data_mx)
for (i in 1:kmx) {
  res[[i]] = tt
}
for (pt in 1:ncol(data_mx)) {
  print(pt)
  ptID = colnames(data_mx)[pt]
  for (pt2 in pt:ncol(data_mx)) {
    ptID2 = colnames(data_mx)[pt2]
    for (k in 1:kmx) {
      tmp = mle.getPtSim(ptBSbyK[[ptID]][k], ptID, ptBSbyK[[ptID2]][k], ptID2, data_mx, perms)
      res[[k]]$ncd[ptID, ptID2] = tmp$NCD
      res[[k]]$ncd[ptID2, ptID] = tmp$NCD
    }
  }
}
}
