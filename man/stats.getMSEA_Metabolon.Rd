% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats.getMSEA_Metabolon.r
\name{stats.getMSEA_Metabolon}
\alias{stats.getMSEA_Metabolon}
\title{Metabolite set enrichment analysis (MSEA) using pathway knowledge curated by Metabolon}
\usage{
stats.getMSEA_Metabolon(abs_filename_dataset, abs_filename_classes,
  pathway_knowledgebase = "Metabolon", output_dir = getwd(),
  expt_name = "msea_results")
}
\arguments{
\item{abs_filename_dataset}{- Relative or absolute path to relevant .gct file.
A .gct file contains profiling data, rows are compounds and columns are sample IDs.}

\item{abs_filename_classes}{- Relative or absolute path to relevant .cls file.
A .cls file contains a mapping of class labels to columns in the .gct file.}

\item{output_dir}{- The path associated with the folder in which MSEA results will be saved.}

\item{expt_name}{- A name to be associated with the experiment you are analyzing. This name will be used in filestems of results rendered in output_dir.}

\item{pathway.knowledgebase}{- The filename of the .gmt file associated with the pathway knowledge desired.
Currently only "Metabolon" is offered, though "KEGG", "WikiPathways", "SMPDB"
and/or "Reactome" can be added in future versions.}
}
\description{
A function that returns the pathway enrichment score for all perturbed metabolites in a patient's full metabolomic profile.
}
\examples{
data(Miller2015)
Miller2015 = Miller2015[,grep("IEM", colnames(Miller2015))]
# Generate a .cls file for your data.
diagnoses = gsub("[[:digit:]]", "", colnames(Miller2015))
diag.ind = diagnoses
diag.ind[which(diag.ind!="Argininemia")] = 0
diag.ind[which(diag.ind=="Argininemia")] = 1
diag.ind = as.numeric(diag.ind)
# Manually add the following text to 1st line of .cls, where num_samples is the length of diag.ind: #num_samples 1 2
# Manually add the following text to 2nd line of .cls: #disease control
write.table(diag.ind, file="MSEA_Datasets/Miller2015_arg.cls", sep=" ", quote=FALSE, row.names = FALSE, col.names = FALSE)

# Create a .gct file.
data_mx = Miller2015
data_mx = data_mx[, order(diags.ind)]
data_mx = cbind(rep(NA, nrow(data_mx)), data_mx)
colnames(data_mx)[1] = "DESCRIPTION"
write.table(data_mx, file="MSEA_Datasets/Miller2015.gct", sep="\\t", quote=FALSE, row.names = TRUE)

# Generate a .gmt file.
population = names(met.profile)
paths.hsa = list.dirs(path="../inst/extdata", full.names = FALSE)
paths.hsa = paths.hsa[-which(paths.hsa \%in\% c("", "RData", "allPathways"))]
sink("Pathway_GMTs/Metabolon.gmt")
for (p in 1:length(paths.hsa)) {
  load(sprintf("../inst/extdata/RData/\%s.RData", paths.hsa[p]))
  pathway.compounds = V(ig)$label[which(V(ig)$shape=="circle")]
  pathCompIDs = unique(tolower(pathway.compounds[which(pathway.compounds \%in\% population)]))
  print(sprintf("\%s         \%s", paths.hsa[p], paste(pathCompIDs, collapse="    ")), quote=FALSE)
}
sink()
print("test")
abs_filename_dataset = "MSEA_Datasets/Miller2015.gct"
abs_filename_classes = "MSEA_Datasets/Miller2015_arg.cls"
pathway.data = stats.getMSEA_Metabolon(abs_filename_dataset, abs_filename_classes, pathway_knowledgebase = "Metabolon", output_dir = getwd(), expt_name="msea_results")
}
